definitions:
  auth.AuthResponse:
    properties:
      token:
        type: string
      user: {}
    type: object
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  goals.Goal:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  goals.Stats:
    properties:
      completed:
        type: integer
      total:
        type: integer
      window:
        type: string
    type: object
  goals.TodayState:
    properties:
      completed:
        type: boolean
      goal:
        $ref: '#/definitions/goals.Goal'
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "400":
          description: Invalid JSON
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Failed to generate token
          schema:
            type: string
      summary: User login
      tags:
      - auth
  /api/auth/me:
    get:
      description: Get the currently authenticated user's information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: User not found in context
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: User registration data
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "400":
          description: Invalid JSON or missing required fields
          schema:
            type: string
        "409":
          description: User already exists
          schema:
            type: string
        "500":
          description: Failed to generate token
          schema:
            type: string
      summary: User registration
      tags:
      - auth
  /api/goals:
    get:
      description: Get the catalog of goals for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/goals.Goal'
            type: array
      summary: List goals
      tags:
      - goals
  /api/goals/{id}/complete:
    delete:
      description: Mark or unmark a goal as completed for today
      parameters:
      - description: Goal ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Toggle completion for today
      tags:
      - goals
    post:
      description: Mark or unmark a goal as completed for today
      parameters:
      - description: Goal ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Toggle completion for today
      tags:
      - goals
  /api/goals/today:
    get:
      description: For each goal, whether it's completed today
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/goals.TodayState'
            type: array
      summary: Today's completion state
      tags:
      - goals
  /api/health:
    get:
      description: Check if the API is running
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /api/protected:
    get:
      description: Example protected endpoint that requires authentication
      produces:
      - text/plain
      responses:
        "200":
          description: Protected route accessed
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Protected endpoint
      tags:
      - protected
  /api/stats:
    get:
      description: Completion stats over a time window
      parameters:
      - default: day
        description: Time window
        enum:
        - day
        - week
        - month
        in: query
        name: window
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/goals.Stats'
      summary: Stats by window
      tags:
      - goals
swagger: "2.0"
