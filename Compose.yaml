services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: grindhouse_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_NAME=testdb

  db:
    image: postgres:15-alpine  
    container_name: my_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data  
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: my_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db

volumes:
  postgres_data: